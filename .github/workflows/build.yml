name: Build the application for Linux

on:
  push:
    branches:
      - master
      - release/*
      - '*/fix-*'
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]

    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Retrieve the version
        id: gitver
        run: |
          echo "app_version=$(git describe --tags --abbrev=4)" >> $GITHUB_OUTPUT

      - name: Prepare Ubuntu
        run: |
          sudo apt update -y && sudo apt install \
            libegl1-mesa-dev \
            libgl1-mesa-dev \
            libglu1-mesa-dev \
            libwayland-dev \
            libx11-xcb-dev \
            libx11-xcb-dev \
            libxcb*-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            mesa-common-dev \
            tree

      - name: Set up python venv
        run: |
          python -m venv ${GITHUB_WORKSPACE}/.venv
          source ${GITHUB_WORKSPACE}/.venv/bin/activate
          pip install --upgrade pip
          pip install conan==1.66.0 ninja

      - name: Specify conan remotes
        run: |
          source ${GITHUB_WORKSPACE}/.venv/bin/activate
          conan remote add peclet http://conan.kpas.alev.pro False

      - name: Download linuxdeploy tools
        run: |
          mkdir -p tools
          wget -O tools/linuxdeploy-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget -O tools/linuxdeploy-plugin-qt-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          chmod +x tools/*.AppImage

      - name: Make build directory
        run: mkdir build && mkdir unixcmd-${{ steps.gitver.outputs.app_version }}-${{ matrix.os }}

      - name: Install dependencies
        working-directory: ./build
        run: |
          source ${GITHUB_WORKSPACE}/.venv/bin/activate
          conan install ..

      - name: Build the application
        working-directory: ./build
        run: |
          source ${GITHUB_WORKSPACE}/.venv/bin/activate
          conan build ..
          tree .
          ldd ./bin/unixcmd

      - name: Generate package
        run: |
          source ${GITHUB_WORKSPACE}/.venv/bin/activate
          conan package -bf ./build -pf ./unixcmd-${{ steps.gitver.outputs.app_version }}-${{ matrix.os }} .
          tree ./unixcmd-${{ steps.gitver.outputs.app_version }}-${{ matrix.os }}

      - name: Uploading archive
        uses: actions/upload-artifact@v4
        if: ${{ !startsWith(github.ref_name, 'release/') && github.ref_type != 'tag' }}
        with:
          name: unixcmd-${{ steps.gitver.outputs.app_version }}-${{ matrix.os }}
          path: ./build/unixcmd-x86_64.AppImage
          compression-level: 9

      - name: Publish prerelease
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref_name, 'release/') }}
        with:
          prerelease: true
          draft: true
          name: "Release candidate ${{ steps.gitver.outputs.app_version }}"
          files:
            unixcmd-${{ steps.gitver.outputs.app_version }}-${{ matrix.os }}.tar.xz

      - name: Publish release
        uses: softprops/action-gh-release@v2
        if: ${{ github.ref_type == 'tag' }}
        with:
          files:
            unixcmd-${{ steps.gitver.outputs.app_version }}-${{ matrix.os }}.tar.xz
